<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<context:annotation-config/>
<!-- 
	jdbc.properties파일을 로드하기 위해서 
	context라는 네임스페이스와 스키마 객체가 필요하다.
	그래서 위에서 필요한 만큼 beans요소의 속성을 수정해야한다.
-->
<context:property-placeholder location="classpath:mybatis/props/jdbc.properties"/>

<!-- Apache의 dbcp라이브러리가 제공하는 BasicDataSource를 생성한다. -->

<bean id="ds" class="org.apache.commons.dbcp.BasicDataSource" 
destroy-method="close">
	<property name="driverClassName" value="${jdbc.driver}"/>
	<property name="url" value="${jdbc.url}"/>
	<property name="username" value="${jdbc.user}"/>
	<property name="password" value="${jdbc.pwd}"/>
	
	<!-- 동시에 사용할 수 있는 최대 커넥션 수 -->
	<property name="maxActive" value="${jdbc.maxActive}"/>
	
	<!-- 커넥션 풀에 반납할 때 최대로 유지되는 커넥션의 수 -->
	<property name="maxIdle" value="${jdbc.maxIdle}"/>
	
	<!-- 커넥션 풀에 반납할 때 최소로 유지되는 커넥션의 수 -->
	<property name="minIdle" value="${jdbc.minIdle}"/>
</bean>

<bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<!-- 
		앞서 생성된 DataSource를 
		현재 객체의 dataSource라는 변수에 저장해야한다.
     -->
	<property name="dataSource" ref="ds"/>
	
	<!-- 맵퍼들의 위치 지정 -->
	<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"/>
	
</bean>

<bean id="ss" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg ref="factory"/>
</bean>

	<!-- 필요한 DAO들 정의하면 된다. -->	
	<context:component-scan base-package="mybatis.dao"/>
	
</beans>
